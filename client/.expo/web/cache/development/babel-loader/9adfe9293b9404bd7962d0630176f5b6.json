{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/HistoryScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"../styles/style\";\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nvar bad = {\n  key: 'bad',\n  color: 'red'\n};\nvar medium = {\n  key: 'medium',\n  color: 'yellow'\n};\nvar good = {\n  key: 'good',\n  color: 'green'\n};\naxios.post('http://localhost:5000/api/history', {\n  condition: \"bad\",\n  date: Date.now()\n}).then(function (res) {\n  return console.log(res);\n}).catch(function (err) {\n  return console.log(err);\n});\n\nfunction yeet() {\n  var dates = axios.get('http://localhost:5000/api/history');\n  console.log(dates);\n}\n\nvar HistoryScreen = function (_Component) {\n  _inherits(HistoryScreen, _Component);\n\n  var _super = _createSuper(HistoryScreen);\n\n  function HistoryScreen() {\n    _classCallCheck(this, HistoryScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HistoryScreen, [{\n    key: \"render\",\n    value: function render() {\n      yeet();\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }\n      }, React.createElement(Calendar, {\n        markedDates: {\n          '2021-04-01': {\n            dots: [bad]\n          },\n          '2021-04-02': {\n            dots: [good]\n          },\n          '2021-04-03': {\n            dots: [medium]\n          }\n        },\n        markingType: 'multi-dot',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return HistoryScreen;\n}(Component);\n\nexport default HistoryScreen;","map":{"version":3,"sources":["/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/HistoryScreen.js"],"names":["axios","React","Component","styles","Calendar","CalendarList","Agenda","bad","key","color","medium","good","post","condition","date","Date","now","then","res","console","log","catch","err","yeet","dates","get","HistoryScreen","container","dots"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;AAEA,OAAOC,MAAP;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,MAAhC,QAA6C,wBAA7C;AAEA,IAAMC,GAAG,GAAG;AAACC,EAAAA,GAAG,EAAC,KAAL;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAAZ;AACA,IAAMC,MAAM,GAAG;AAACF,EAAAA,GAAG,EAAC,QAAL;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAAf;AACA,IAAME,IAAI,GAAG;AAACH,EAAAA,GAAG,EAAC,MAAL;AAAaC,EAAAA,KAAK,EAAE;AAApB,CAAb;AAEAT,KAAK,CAACY,IAAN,CAAW,mCAAX,EAAgD;AAC9CC,EAAAA,SAAS,EAAE,KADmC;AAE9CC,EAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAFwC,CAAhD,EAIGC,IAJH,CAIQ,UAAAC,GAAG;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,CAJX,EAKGG,KALH,CAKS,UAAAC,GAAG;AAAA,SAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ;AAAA,CALZ;;AAOA,SAASC,IAAT,GAAgB;AACd,MAAIC,KAAK,GAAGxB,KAAK,CAACyB,GAAN,CAAU,mCAAV,CAAZ;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD;;IAEKE,a;;;;;;;;;;;;;WACJ,kBAAS;AAEPH,MAAAA,IAAI;AAEJ,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEpB,MAAM,CAACwB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACC,QAAA,WAAW,EAAE;AACT,wBAAc;AAACC,YAAAA,IAAI,EAAE,CAACrB,GAAD;AAAP,WADL;AAET,wBAAc;AAACqB,YAAAA,IAAI,EAAE,CAACjB,IAAD;AAAP,WAFL;AAGT,wBAAc;AAACiB,YAAAA,IAAI,EAAE,CAAClB,MAAD;AAAP;AAHL,SADd;AAMG,QAAA,WAAW,EAAE,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAcD;;;;EAnByBR,S;;AAsB5B,eAAewB,aAAf","sourcesContent":["import axios from 'axios';\nimport React, {Component} from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, Button, Alert } from 'react-native';\nimport styles from '../styles/style'\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\n\nconst bad = {key:'bad', color: 'red'};\nconst medium = {key:'medium', color: 'yellow'}; // selectedDotColor: 'blue'}\nconst good = {key:'good', color: 'green'};\n\naxios.post('http://localhost:5000/api/history', {\n  condition: \"bad\",\n  date: Date.now()\n})\n  .then(res => console.log(res))\n  .catch(err => console.log(err));\n\nfunction yeet() {\n  let dates = axios.get('http://localhost:5000/api/history');\n  console.log(dates);\n}\n\nclass HistoryScreen extends Component {\n  render() {\n\n    yeet();\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <Calendar\n        \tmarkedDates={{\n        \t    '2021-04-01': {dots: [bad]},\n        \t    '2021-04-02': {dots: [good]},\n        \t    '2021-04-03': {dots: [medium]}\n        \t  }}\n        \t  markingType={'multi-dot'}\n        />\n\n\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default HistoryScreen\n"]},"metadata":{},"sourceType":"module"}