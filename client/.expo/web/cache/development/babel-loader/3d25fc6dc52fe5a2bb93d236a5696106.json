{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/SettingsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from \"../styles/style\";\n\nvar SettingsScreen = function (_Component) {\n  _inherits(SettingsScreen, _Component);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen() {\n    _classCallCheck(this, SettingsScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, \"Set your settings here\"), React.createElement(TouchableOpacity, {\n        style: styles.defaultButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, \"Change User?\")), React.createElement(TouchableOpacity, {\n        style: styles.defaultButtonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Change Theme?\")), React.createElement(TouchableOpacity, {\n        style: styles.defaultButtonContainer,\n        onPress: function onPress() {\n          return _this.props.navigation.navigate('Title');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"Return\")));\n    }\n  }]);\n\n  return SettingsScreen;\n}(Component);\n\nexport default SettingsScreen;","map":{"version":3,"sources":["/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/SettingsScreen.js"],"names":["React","Component","styles","SettingsScreen","container","titleText","defaultButtonContainer","menuText","props","navigation","navigate"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;AAEA,OAAOC,MAAP;;IAGMC,c;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AACP,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAED,MAAM,CAACE,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAGE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEH,MAAM,CAACI,sBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAHF,EASE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACI,sBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CATF,EAeE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEL,MAAM,CAACI,sBADhB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACE,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,OAA/B,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAfF,CADF;AAwBD;;;;EA1B0BN,S;;AA6B7B,eAAeE,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, TouchableOpacity, Alert } from 'react-native';\nimport styles from '../styles/style'\n\n\nclass SettingsScreen extends Component {\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.titleText}>Set your settings here</Text>\n\n        <TouchableOpacity\n          style={styles.defaultButtonContainer}\n          >\n          <Text style={styles.menuText}>Change User?</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.defaultButtonContainer}\n          >\n          <Text style={styles.menuText}>Change Theme?</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.defaultButtonContainer}\n          onPress={() => this.props.navigation.navigate('Title')}\n          >\n          <Text style={styles.menuText} >Return</Text>\n        </TouchableOpacity>\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default SettingsScreen\n"]},"metadata":{},"sourceType":"module"}