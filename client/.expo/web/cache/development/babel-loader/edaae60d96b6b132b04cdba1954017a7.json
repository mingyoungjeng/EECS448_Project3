{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/Question.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styles/style\";\nvar questions = {\n  'question0': {\n    'prompt': 'How would you describe your mood today?',\n    'responses': {\n      'response0': 'Jolly!',\n      'response1': 'Peaceful',\n      'response2': 'Peeved',\n      'response3': 'Depressed'\n    }\n  },\n  'question1': {\n    'prompt': 'How are you doing?',\n    'responses': {\n      'response0': 'Great!',\n      'response1': 'Doing ok.',\n      'response2': 'Could be better.',\n      'response3': 'Not doing so hot.'\n    }\n  },\n  'question2': {\n    'prompt': 'Describe today in a color?',\n    'responses': {\n      'response0': 'Red',\n      'response1': 'Orange',\n      'response2': 'Yellow',\n      'response3': 'Green',\n      'response4': 'Blue',\n      'response5': 'Indigo',\n      'response6': 'Violet'\n    }\n  },\n  'question3': {\n    'prompt': 'Have you felt anxious, restless or tense today?',\n    'responses': {\n      'response0': 'OMG yes!',\n      'response1': 'I guess so.',\n      'response2': 'Not really',\n      'response3': 'Cool as a cucumber, dude.'\n    }\n  }\n};\n\nvar Question = function (_Component) {\n  _inherits(Question, _Component);\n\n  var _super = _createSuper(Question);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _super.call(this, props);\n\n    _this.revealText = function () {\n      _this.setState({\n        reply: \"Oh that's interesting to hear.\"\n      });\n    };\n\n    _this.renderResponses = function () {\n      console.log('rendering responses');\n      var responses = \"\";\n\n      try {\n        var _responses = questions['question' + String(_this.state.question)]['responses'];\n        var buttons = [];\n        var temp = Object.keys(_responses);\n\n        for (var i = 0; i < temp.length; i++) {\n          buttons.push(React.createElement(TouchableOpacity, {\n            key: i,\n            style: styles.defaultButtonContainer,\n            onPress: _this.revealText,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.responseText,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }\n          }, _responses[temp[i]])));\n        }\n\n        ;\n        return buttons;\n      } catch (_unused) {\n        return \"Loading\";\n      }\n    };\n\n    _this.renderQuestion = function () {\n      console.log('Rendering question');\n      var prompt = \"\";\n\n      try {\n        prompt = questions['question' + String(_this.state.question)]['prompt'];\n      } catch (_unused2) {\n        prompt = \"Loading...\";\n      }\n\n      return React.createElement(Text, {\n        style: styles.questionText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 12\n        }\n      }, prompt);\n    };\n\n    _this.state = {\n      reply: \"\",\n      question: 0\n    };\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(View, {\n        style: styles.surveyContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, this.renderQuestion(), this.renderResponses(), React.createElement(TouchableOpacity, {\n        style: styles.defaultButtonContainer,\n        onPress: function onPress() {\n          var newNum = _this2.state.question + 1;\n\n          _this2.setState({\n            question: newNum\n          });\n\n          _this2.setState({\n            reply: \"\"\n          });\n\n          if (newNum >= Object.keys(questions).length) {\n            _this2.setState({\n              question: 0\n            });\n\n            _this2.props.navigation.navigate('Content');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, \"Next\"))), React.createElement(View, {\n        style: styles.textContentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.responseText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, this.state.reply)));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":{"version":3,"sources":["/Users/mingyoungjeng/Downloads/EECS448_Project3/client/components/Question.js"],"names":["React","Component","styles","questions","Question","props","revealText","setState","reply","renderResponses","console","log","responses","String","state","question","buttons","temp","Object","keys","i","length","push","defaultButtonContainer","responseText","renderQuestion","prompt","questionText","surveyContainer","newNum","navigation","navigate","textContentContainer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, Text, View, SafeAreaView, Button, TouchableOpacity } from 'react-native';\nimport styles from '../styles/style'\n\nconst questions = {\n  'question0' : {\n    'prompt': 'How would you describe your mood today?',\n    'responses' : {\n      'response0': 'Jolly!',\n      'response1': 'Peaceful',\n      'response2': 'Peeved',\n      'response3': 'Depressed'\n    }\n  },\n  'question1' : {\n    'prompt': 'How are you doing?',\n    'responses' : {\n      'response0': 'Great!',\n      'response1': 'Doing ok.',\n      'response2': 'Could be better.',\n      'response3': 'Not doing so hot.'\n    }\n  },\n  'question2' : {\n    'prompt': 'Describe today in a color?',\n    'responses' : {\n      'response0': 'Red',\n      'response1': 'Orange',\n      'response2': 'Yellow',\n      'response3': 'Green',\n      'response4': 'Blue',\n      'response5': 'Indigo',\n      'response6': 'Violet'\n    }\n  },\n  'question3' : {\n    'prompt': 'Have you felt anxious, restless or tense today?',\n    'responses' : {\n      'response0': 'OMG yes!',\n      'response1': 'I guess so.',\n      'response2': 'Not really',\n      'response3': 'Cool as a cucumber, dude.'\n    }\n  },\n}\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reply: \"\",\n      question: 0\n    };\n  }\n\n  revealText = () => {\n    this.setState({ reply: \"Oh that's interesting to hear.\" });\n  };\n\n  renderResponses = () => {\n    console.log('rendering responses');\n    var responses = \"\";\n    try {\n      const responses = questions['question' + String(this.state.question)]['responses']\n      const buttons = [];\n      const temp = Object.keys(responses);\n      for (var i = 0; i < temp.length; i++) {\n        buttons.push(\n          <TouchableOpacity\n            key={i}\n            style={styles.defaultButtonContainer}\n            onPress={this.revealText}>\n\n            <Text style={styles.responseText}>{responses[temp[i]]}</Text>\n          </TouchableOpacity>\n        );\n      };\n      return buttons;\n    } catch {\n      return \"Loading\";\n    }\n\n  }\n\n  renderQuestion = () => {\n    console.log('Rendering question');\n    var prompt = \"\";\n    try {\n      prompt = questions['question' + String(this.state.question)]['prompt'];\n    }\n    catch {\n      prompt = \"Loading...\";\n    }\n    return <Text style={styles.questionText}>{prompt}</Text>;\n  }\n\n  render() {\n    return (\n      <>\n        <View style={styles.surveyContainer}>\n          {this.renderQuestion()}\n\n          {this.renderResponses()}\n\n          <TouchableOpacity style={styles.defaultButtonContainer} onPress={() => {\n            const newNum = this.state.question + 1;\n            this.setState({ question: newNum});\n            this.setState({ reply: \"\"});\n            if (newNum >= Object.keys(questions).length ) {\n              this.setState({ question: 0 });\n              this.props.navigation.navigate('Content');\n            }\n          }}>\n            <Text>Next</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.textContentContainer}>\n          <Text style={styles.responseText}>{this.state.reply}</Text>\n        </View>\n\n      </>\n  );\n  }\n}\n\nexport default Question\n"]},"metadata":{},"sourceType":"module"}